// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file chalk/auth/v1/permissions.proto (package chalk.auth.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodOptions, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum chalk.auth.v1.Permission
 */
export enum Permission {
  /**
   * Default value -- should never be set.
   *
   * @generated from enum value: PERMISSION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Only used for creating a new token
   *
   * @generated from enum value: PERMISSION_INSECURE_UNAUTHENTICATED = 1;
   */
  INSECURE_UNAUTHENTICATED = 1,

  /**
   * User is authenticated FOR THE ENVIRONMENT. This permissions should be used sparingly
   * (e.g. for ping checks that shouldn't be exposed to the public)
   *
   * @generated from enum value: PERMISSION_AUTHENTICATED = 2;
   */
  AUTHENTICATED = 2,

  /**
   * Query online features.
   *
   * @generated from enum value: PERMISSION_QUERY_ONLINE = 3;
   */
  QUERY_ONLINE = 3,

  /**
   * Query offline features.
   *
   * @generated from enum value: PERMISSION_QUERY_OFFLINE = 4;
   */
  QUERY_OFFLINE = 4,

  /**
   * Create a new chart or alert
   *
   * @generated from enum value: PERMISSION_MONITORING_CREATE = 5;
   */
  MONITORING_CREATE = 5,

  /**
   * See charts and alerts
   *
   * @generated from enum value: PERMISSION_MONITORING_READ = 6;
   */
  MONITORING_READ = 6,

  /**
   * Add team members to your organization
   *
   * @generated from enum value: PERMISSION_TEAM_ADD = 7;
   */
  TEAM_ADD = 7,

  /**
   * Remove a team member
   *
   * @generated from enum value: PERMISSION_TEAM_DELETE = 8;
   */
  TEAM_DELETE = 8,

  /**
   * See the team members in your organization
   *
   * @generated from enum value: PERMISSION_TEAM_LIST = 9;
   */
  TEAM_LIST = 9,

  /**
   * Configure authentication options for your organization
   *
   * @generated from enum value: PERMISSION_TEAM_ADMIN = 10;
   */
  TEAM_ADMIN = 10,

  /**
   * Read information about deployments.
   *
   * @generated from enum value: PERMISSION_DEPLOY_READ = 11;
   */
  DEPLOY_READ = 11,

  /**
   * Create a new deployment.
   *
   * @generated from enum value: PERMISSION_DEPLOY_CREATE = 12;
   */
  DEPLOY_CREATE = 12,

  /**
   * Create a new preview deployment.
   *
   * @generated from enum value: PERMISSION_DEPLOY_PREVIEW = 13;
   */
  DEPLOY_PREVIEW = 13,

  /**
   * Redeploy an existing deployment.
   *
   * @generated from enum value: PERMISSION_DEPLOY_REDEPLOY = 14;
   */
  DEPLOY_REDEPLOY = 14,

  /**
   * Read logs from resolvers.
   *
   * @generated from enum value: PERMISSION_LOGS_LIST = 15;
   */
  LOGS_LIST = 15,

  /**
   * Read the scheduled runs.
   *
   * @generated from enum value: PERMISSION_CRON_READ = 16;
   */
  CRON_READ = 16,

  /**
   * Trigger a new scheduled run.
   *
   * @generated from enum value: PERMISSION_CRON_CREATE = 17;
   */
  CRON_CREATE = 17,

  /**
   * Create, modify, or delete secret values.
   *
   * @generated from enum value: PERMISSION_SECRETS_WRITE = 18;
   */
  SECRETS_WRITE = 18,

  /**
   * Decrypt secret values.
   *
   * @generated from enum value: PERMISSION_SECRETS_DECRYPT = 19;
   */
  SECRETS_DECRYPT = 19,

  /**
   * See the list of available secrets. Reading secrets is not allowed with this permission.
   *
   * @generated from enum value: PERMISSION_SECRETS_LIST = 20;
   */
  SECRETS_LIST = 20,

  /**
   * Create, modify, or delete service tokens.
   *
   * @generated from enum value: PERMISSION_TOKENS_WRITE = 21;
   */
  TOKENS_WRITE = 21,

  /**
   * List the service tokens and see client ids, but not client secrets.
   *
   * @generated from enum value: PERMISSION_TOKENS_LIST = 22;
   */
  TOKENS_LIST = 22,

  /**
   * View information about migrations.
   *
   * @generated from enum value: PERMISSION_MIGRATE_READ = 23;
   */
  MIGRATE_READ = 23,

  /**
   * Create a migration plan.
   *
   * @generated from enum value: PERMISSION_MIGRATE_PLAN = 24;
   */
  MIGRATE_PLAN = 24,

  /**
   * Execute a migration plan.
   *
   * @generated from enum value: PERMISSION_MIGRATE_EXECUTE = 25;
   */
  MIGRATE_EXECUTE = 25,

  /**
   * Create a new project
   *
   * @generated from enum value: PERMISSION_PROJECT_CREATE = 26;
   */
  PROJECT_CREATE = 26,

  /**
   * Administer Chalk
   *
   * @generated from enum value: PERMISSION_CHALK_ADMIN = 27;
   */
  CHALK_ADMIN = 27,

  /**
   * Read billing information
   *
   * @generated from enum value: PERMISSION_BILLING_READ = 28;
   */
  BILLING_READ = 28,
}
// Retrieve enum metadata with: proto3.getEnumType(Permission)
proto3.util.setEnumType(Permission, "chalk.auth.v1.Permission", [
  { no: 0, name: "PERMISSION_UNSPECIFIED" },
  { no: 1, name: "PERMISSION_INSECURE_UNAUTHENTICATED" },
  { no: 2, name: "PERMISSION_AUTHENTICATED" },
  { no: 3, name: "PERMISSION_QUERY_ONLINE" },
  { no: 4, name: "PERMISSION_QUERY_OFFLINE" },
  { no: 5, name: "PERMISSION_MONITORING_CREATE" },
  { no: 6, name: "PERMISSION_MONITORING_READ" },
  { no: 7, name: "PERMISSION_TEAM_ADD" },
  { no: 8, name: "PERMISSION_TEAM_DELETE" },
  { no: 9, name: "PERMISSION_TEAM_LIST" },
  { no: 10, name: "PERMISSION_TEAM_ADMIN" },
  { no: 11, name: "PERMISSION_DEPLOY_READ" },
  { no: 12, name: "PERMISSION_DEPLOY_CREATE" },
  { no: 13, name: "PERMISSION_DEPLOY_PREVIEW" },
  { no: 14, name: "PERMISSION_DEPLOY_REDEPLOY" },
  { no: 15, name: "PERMISSION_LOGS_LIST" },
  { no: 16, name: "PERMISSION_CRON_READ" },
  { no: 17, name: "PERMISSION_CRON_CREATE" },
  { no: 18, name: "PERMISSION_SECRETS_WRITE" },
  { no: 19, name: "PERMISSION_SECRETS_DECRYPT" },
  { no: 20, name: "PERMISSION_SECRETS_LIST" },
  { no: 21, name: "PERMISSION_TOKENS_WRITE" },
  { no: 22, name: "PERMISSION_TOKENS_LIST" },
  { no: 23, name: "PERMISSION_MIGRATE_READ" },
  { no: 24, name: "PERMISSION_MIGRATE_PLAN" },
  { no: 25, name: "PERMISSION_MIGRATE_EXECUTE" },
  { no: 26, name: "PERMISSION_PROJECT_CREATE" },
  { no: 27, name: "PERMISSION_CHALK_ADMIN" },
  { no: 28, name: "PERMISSION_BILLING_READ" },
]);

/**
 * @generated from extension: chalk.auth.v1.Permission permission = 2000;
 */
export const permission = proto3.makeExtension<MethodOptions, Permission>(
  "chalk.auth.v1.permission", 
  MethodOptions, 
  () => ({ no: 2000, kind: "enum", T: proto3.getEnumType(Permission) }),
);

