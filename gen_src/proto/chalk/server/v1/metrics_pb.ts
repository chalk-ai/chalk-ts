// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file chalk/server/v1/metrics.proto (package chalk.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message chalk.server.v1.GetOverviewSummaryMetricsRequest
 */
export class GetOverviewSummaryMetricsRequest extends Message<GetOverviewSummaryMetricsRequest> {
  /**
   * @generated from field: optional string range_start = 1;
   */
  rangeStart?: string;

  /**
   * @generated from field: optional string range_end = 2;
   */
  rangeEnd?: string;

  constructor(data?: PartialMessage<GetOverviewSummaryMetricsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.GetOverviewSummaryMetricsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "range_start", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "range_end", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOverviewSummaryMetricsRequest {
    return new GetOverviewSummaryMetricsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOverviewSummaryMetricsRequest {
    return new GetOverviewSummaryMetricsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOverviewSummaryMetricsRequest {
    return new GetOverviewSummaryMetricsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOverviewSummaryMetricsRequest | PlainMessage<GetOverviewSummaryMetricsRequest> | undefined, b: GetOverviewSummaryMetricsRequest | PlainMessage<GetOverviewSummaryMetricsRequest> | undefined): boolean {
    return proto3.util.equals(GetOverviewSummaryMetricsRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.OverviewSummaryMetric
 */
export class OverviewSummaryMetric extends Message<OverviewSummaryMetric> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: float value = 2;
   */
  value = 0;

  constructor(data?: PartialMessage<OverviewSummaryMetric>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.OverviewSummaryMetric";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OverviewSummaryMetric {
    return new OverviewSummaryMetric().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OverviewSummaryMetric {
    return new OverviewSummaryMetric().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OverviewSummaryMetric {
    return new OverviewSummaryMetric().fromJsonString(jsonString, options);
  }

  static equals(a: OverviewSummaryMetric | PlainMessage<OverviewSummaryMetric> | undefined, b: OverviewSummaryMetric | PlainMessage<OverviewSummaryMetric> | undefined): boolean {
    return proto3.util.equals(OverviewSummaryMetric, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.GetOverviewSummaryMetricsResponse
 */
export class GetOverviewSummaryMetricsResponse extends Message<GetOverviewSummaryMetricsResponse> {
  /**
   * @generated from field: repeated chalk.server.v1.OverviewSummaryMetric metrics = 1;
   */
  metrics: OverviewSummaryMetric[] = [];

  constructor(data?: PartialMessage<GetOverviewSummaryMetricsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.GetOverviewSummaryMetricsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metrics", kind: "message", T: OverviewSummaryMetric, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOverviewSummaryMetricsResponse {
    return new GetOverviewSummaryMetricsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOverviewSummaryMetricsResponse {
    return new GetOverviewSummaryMetricsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOverviewSummaryMetricsResponse {
    return new GetOverviewSummaryMetricsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOverviewSummaryMetricsResponse | PlainMessage<GetOverviewSummaryMetricsResponse> | undefined, b: GetOverviewSummaryMetricsResponse | PlainMessage<GetOverviewSummaryMetricsResponse> | undefined): boolean {
    return proto3.util.equals(GetOverviewSummaryMetricsResponse, a, b);
  }
}

