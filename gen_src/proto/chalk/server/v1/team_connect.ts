// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file chalk/server/v1/team.proto (package chalk.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateEnvironmentRequest, CreateEnvironmentResponse, CreateProjectRequest, CreateProjectResponse, CreateServiceTokenRequest, CreateServiceTokenResponse, CreateTeamRequest, CreateTeamResponse, DeleteServiceTokenRequest, DeleteServiceTokenResponse, ExpireTeamInviteRequest, ExpireTeamInviteResponse, GetAgentRequest, GetAgentResponse, GetAvailablePermissionsRequest, GetAvailablePermissionsResponse, GetDisplayAgentRequest, GetDisplayAgentResponse, GetEnvironmentsRequest, GetEnvironmentsResponse, GetEnvRequest, GetEnvResponse, GetTeamPermissionsRequest, GetTeamPermissionsResponse, GetTeamRequest, GetTeamResponse, InviteTeamMemberRequest, InviteTeamMemberResponse, ListServiceTokensRequest, ListServiceTokensResponse, ListTeamInvitesRequest, ListTeamInvitesResponse, UpdateEnvironmentRequest, UpdateEnvironmentResponse, UpdateScimGroupSettingsRequest, UpdateScimGroupSettingsResponse, UpdateServiceTokenRequest, UpdateServiceTokenResponse, UpsertFeaturePermissionsRequest, UpsertFeaturePermissionsResponse } from "./team_pb";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service chalk.server.v1.TeamService
 */
export const TeamService = {
  typeName: "chalk.server.v1.TeamService",
  methods: {
    /**
     * @generated from rpc chalk.server.v1.TeamService.GetEnv
     */
    getEnv: {
      name: "GetEnv",
      I: GetEnvRequest,
      O: GetEnvResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.GetEnvironments
     */
    getEnvironments: {
      name: "GetEnvironments",
      I: GetEnvironmentsRequest,
      O: GetEnvironmentsResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.GetAgent
     */
    getAgent: {
      name: "GetAgent",
      I: GetAgentRequest,
      O: GetAgentResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.GetDisplayAgent
     */
    getDisplayAgent: {
      name: "GetDisplayAgent",
      I: GetDisplayAgentRequest,
      O: GetDisplayAgentResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.GetTeam
     */
    getTeam: {
      name: "GetTeam",
      I: GetTeamRequest,
      O: GetTeamResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.CreateTeam
     */
    createTeam: {
      name: "CreateTeam",
      I: CreateTeamRequest,
      O: CreateTeamResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.CreateProject
     */
    createProject: {
      name: "CreateProject",
      I: CreateProjectRequest,
      O: CreateProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.CreateEnvironment
     */
    createEnvironment: {
      name: "CreateEnvironment",
      I: CreateEnvironmentRequest,
      O: CreateEnvironmentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.UpdateEnvironment
     */
    updateEnvironment: {
      name: "UpdateEnvironment",
      I: UpdateEnvironmentRequest,
      O: UpdateEnvironmentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.GetAvailablePermissions
     */
    getAvailablePermissions: {
      name: "GetAvailablePermissions",
      I: GetAvailablePermissionsRequest,
      O: GetAvailablePermissionsResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.CreateServiceToken
     */
    createServiceToken: {
      name: "CreateServiceToken",
      I: CreateServiceTokenRequest,
      O: CreateServiceTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.DeleteServiceToken
     */
    deleteServiceToken: {
      name: "DeleteServiceToken",
      I: DeleteServiceTokenRequest,
      O: DeleteServiceTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.ListServiceTokens
     */
    listServiceTokens: {
      name: "ListServiceTokens",
      I: ListServiceTokensRequest,
      O: ListServiceTokensResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.UpdateServiceToken
     */
    updateServiceToken: {
      name: "UpdateServiceToken",
      I: UpdateServiceTokenRequest,
      O: UpdateServiceTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.InviteTeamMember
     */
    inviteTeamMember: {
      name: "InviteTeamMember",
      I: InviteTeamMemberRequest,
      O: InviteTeamMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.ExpireTeamInvite
     */
    expireTeamInvite: {
      name: "ExpireTeamInvite",
      I: ExpireTeamInviteRequest,
      O: ExpireTeamInviteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.ListTeamInvites
     */
    listTeamInvites: {
      name: "ListTeamInvites",
      I: ListTeamInvitesRequest,
      O: ListTeamInvitesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.UpsertFeaturePermissions
     */
    upsertFeaturePermissions: {
      name: "UpsertFeaturePermissions",
      I: UpsertFeaturePermissionsRequest,
      O: UpsertFeaturePermissionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.UpdateScimGroupSettings
     */
    updateScimGroupSettings: {
      name: "UpdateScimGroupSettings",
      I: UpdateScimGroupSettingsRequest,
      O: UpdateScimGroupSettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chalk.server.v1.TeamService.GetTeamPermissions
     */
    getTeamPermissions: {
      name: "GetTeamPermissions",
      I: GetTeamPermissionsRequest,
      O: GetTeamPermissionsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

