// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file chalk/server/v1/named_query.proto (package chalk.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetAllNamedQueriesActiveDeploymentRequest, GetAllNamedQueriesActiveDeploymentResponse, GetAllNamedQueriesRequest, GetAllNamedQueriesResponse, GetNamedQueryByNameRequest, GetNamedQueryByNameResponse } from "./named_query_pb";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service chalk.server.v1.NamedQueryService
 */
export const NamedQueryService = {
  typeName: "chalk.server.v1.NamedQueryService",
  methods: {
    /**
     * @generated from rpc chalk.server.v1.NamedQueryService.GetAllNamedQueries
     */
    getAllNamedQueries: {
      name: "GetAllNamedQueries",
      I: GetAllNamedQueriesRequest,
      O: GetAllNamedQueriesResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc chalk.server.v1.NamedQueryService.GetAllNamedQueriesActiveDeployment
     */
    getAllNamedQueriesActiveDeployment: {
      name: "GetAllNamedQueriesActiveDeployment",
      I: GetAllNamedQueriesActiveDeploymentRequest,
      O: GetAllNamedQueriesActiveDeploymentResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc chalk.server.v1.NamedQueryService.GetNamedQueryByName
     */
    getNamedQueryByName: {
      name: "GetNamedQueryByName",
      I: GetNamedQueryByNameRequest,
      O: GetNamedQueryByNameResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
  }
} as const;

