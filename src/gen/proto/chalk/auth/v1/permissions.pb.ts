// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: chalk/auth/v1/permissions.proto

/* eslint-disable */

export const protobufPackage = "chalk.auth.v1";

export enum Permission {
  /** PERMISSION_UNSPECIFIED - Default value -- should never be set. */
  PERMISSION_UNSPECIFIED = 0,
  /** PERMISSION_INSECURE_UNAUTHENTICATED - Only used for creating a new token */
  PERMISSION_INSECURE_UNAUTHENTICATED = 1,
  /**
   * PERMISSION_AUTHENTICATED - User is authenticated FOR THE ENVIRONMENT. This permissions should be used sparingly
   * (e.g. for ping checks that shouldn't be exposed to the public)
   */
  PERMISSION_AUTHENTICATED = 2,
  /** PERMISSION_QUERY_ONLINE - Query online features. */
  PERMISSION_QUERY_ONLINE = 3,
  /** PERMISSION_QUERY_OFFLINE - Query offline features. */
  PERMISSION_QUERY_OFFLINE = 4,
  /** PERMISSION_MONITORING_CREATE - Create a new chart or alert */
  PERMISSION_MONITORING_CREATE = 5,
  /** PERMISSION_MONITORING_READ - See charts and alerts */
  PERMISSION_MONITORING_READ = 6,
  /** PERMISSION_TEAM_ADD - Add team members to your organization */
  PERMISSION_TEAM_ADD = 7,
  /** PERMISSION_TEAM_DELETE - Remove a team member */
  PERMISSION_TEAM_DELETE = 8,
  /** PERMISSION_TEAM_LIST - See the team members in your organization */
  PERMISSION_TEAM_LIST = 9,
  /** PERMISSION_TEAM_ADMIN - Configure authentication options for your organization */
  PERMISSION_TEAM_ADMIN = 10,
  /** PERMISSION_DEPLOY_READ - Read information about deployments. */
  PERMISSION_DEPLOY_READ = 11,
  /** PERMISSION_DEPLOY_CREATE - Create a new deployment. */
  PERMISSION_DEPLOY_CREATE = 12,
  /** PERMISSION_DEPLOY_PREVIEW - Create a new preview deployment. */
  PERMISSION_DEPLOY_PREVIEW = 13,
  /** PERMISSION_DEPLOY_REDEPLOY - Redeploy an existing deployment. */
  PERMISSION_DEPLOY_REDEPLOY = 14,
  /** PERMISSION_LOGS_LIST - Read logs from resolvers. */
  PERMISSION_LOGS_LIST = 15,
  /** PERMISSION_CRON_READ - Read the scheduled runs. */
  PERMISSION_CRON_READ = 16,
  /** PERMISSION_CRON_CREATE - Trigger a new scheduled run. */
  PERMISSION_CRON_CREATE = 17,
  /** PERMISSION_SECRETS_WRITE - Create, modify, or delete secret values. */
  PERMISSION_SECRETS_WRITE = 18,
  /** PERMISSION_SECRETS_DECRYPT - Decrypt secret values. */
  PERMISSION_SECRETS_DECRYPT = 19,
  /** PERMISSION_SECRETS_LIST - See the list of available secrets. Reading secrets is not allowed with this permission. */
  PERMISSION_SECRETS_LIST = 20,
  /** PERMISSION_TOKENS_WRITE - Create, modify, or delete service tokens. */
  PERMISSION_TOKENS_WRITE = 21,
  /** PERMISSION_TOKENS_LIST - List the service tokens and see client ids, but not client secrets. */
  PERMISSION_TOKENS_LIST = 22,
  /** PERMISSION_MIGRATE_READ - View information about migrations. */
  PERMISSION_MIGRATE_READ = 23,
  /** PERMISSION_MIGRATE_PLAN - Create a migration plan. */
  PERMISSION_MIGRATE_PLAN = 24,
  /** PERMISSION_MIGRATE_EXECUTE - Execute a migration plan. */
  PERMISSION_MIGRATE_EXECUTE = 25,
  /** PERMISSION_PROJECT_CREATE - Create a new project */
  PERMISSION_PROJECT_CREATE = 26,
  /** PERMISSION_CHALK_ADMIN - Administer Chalk */
  PERMISSION_CHALK_ADMIN = 27,
  /** PERMISSION_BILLING_READ - Read billing information */
  PERMISSION_BILLING_READ = 28,
  UNRECOGNIZED = -1,
}

export function permissionFromJSON(object: any): Permission {
  switch (object) {
    case 0:
    case "PERMISSION_UNSPECIFIED":
      return Permission.PERMISSION_UNSPECIFIED;
    case 1:
    case "PERMISSION_INSECURE_UNAUTHENTICATED":
      return Permission.PERMISSION_INSECURE_UNAUTHENTICATED;
    case 2:
    case "PERMISSION_AUTHENTICATED":
      return Permission.PERMISSION_AUTHENTICATED;
    case 3:
    case "PERMISSION_QUERY_ONLINE":
      return Permission.PERMISSION_QUERY_ONLINE;
    case 4:
    case "PERMISSION_QUERY_OFFLINE":
      return Permission.PERMISSION_QUERY_OFFLINE;
    case 5:
    case "PERMISSION_MONITORING_CREATE":
      return Permission.PERMISSION_MONITORING_CREATE;
    case 6:
    case "PERMISSION_MONITORING_READ":
      return Permission.PERMISSION_MONITORING_READ;
    case 7:
    case "PERMISSION_TEAM_ADD":
      return Permission.PERMISSION_TEAM_ADD;
    case 8:
    case "PERMISSION_TEAM_DELETE":
      return Permission.PERMISSION_TEAM_DELETE;
    case 9:
    case "PERMISSION_TEAM_LIST":
      return Permission.PERMISSION_TEAM_LIST;
    case 10:
    case "PERMISSION_TEAM_ADMIN":
      return Permission.PERMISSION_TEAM_ADMIN;
    case 11:
    case "PERMISSION_DEPLOY_READ":
      return Permission.PERMISSION_DEPLOY_READ;
    case 12:
    case "PERMISSION_DEPLOY_CREATE":
      return Permission.PERMISSION_DEPLOY_CREATE;
    case 13:
    case "PERMISSION_DEPLOY_PREVIEW":
      return Permission.PERMISSION_DEPLOY_PREVIEW;
    case 14:
    case "PERMISSION_DEPLOY_REDEPLOY":
      return Permission.PERMISSION_DEPLOY_REDEPLOY;
    case 15:
    case "PERMISSION_LOGS_LIST":
      return Permission.PERMISSION_LOGS_LIST;
    case 16:
    case "PERMISSION_CRON_READ":
      return Permission.PERMISSION_CRON_READ;
    case 17:
    case "PERMISSION_CRON_CREATE":
      return Permission.PERMISSION_CRON_CREATE;
    case 18:
    case "PERMISSION_SECRETS_WRITE":
      return Permission.PERMISSION_SECRETS_WRITE;
    case 19:
    case "PERMISSION_SECRETS_DECRYPT":
      return Permission.PERMISSION_SECRETS_DECRYPT;
    case 20:
    case "PERMISSION_SECRETS_LIST":
      return Permission.PERMISSION_SECRETS_LIST;
    case 21:
    case "PERMISSION_TOKENS_WRITE":
      return Permission.PERMISSION_TOKENS_WRITE;
    case 22:
    case "PERMISSION_TOKENS_LIST":
      return Permission.PERMISSION_TOKENS_LIST;
    case 23:
    case "PERMISSION_MIGRATE_READ":
      return Permission.PERMISSION_MIGRATE_READ;
    case 24:
    case "PERMISSION_MIGRATE_PLAN":
      return Permission.PERMISSION_MIGRATE_PLAN;
    case 25:
    case "PERMISSION_MIGRATE_EXECUTE":
      return Permission.PERMISSION_MIGRATE_EXECUTE;
    case 26:
    case "PERMISSION_PROJECT_CREATE":
      return Permission.PERMISSION_PROJECT_CREATE;
    case 27:
    case "PERMISSION_CHALK_ADMIN":
      return Permission.PERMISSION_CHALK_ADMIN;
    case 28:
    case "PERMISSION_BILLING_READ":
      return Permission.PERMISSION_BILLING_READ;
    case -1:
    case "UNRECOGNIZED":
    default:
      return Permission.UNRECOGNIZED;
  }
}

export function permissionToJSON(object: Permission): string {
  switch (object) {
    case Permission.PERMISSION_UNSPECIFIED:
      return "PERMISSION_UNSPECIFIED";
    case Permission.PERMISSION_INSECURE_UNAUTHENTICATED:
      return "PERMISSION_INSECURE_UNAUTHENTICATED";
    case Permission.PERMISSION_AUTHENTICATED:
      return "PERMISSION_AUTHENTICATED";
    case Permission.PERMISSION_QUERY_ONLINE:
      return "PERMISSION_QUERY_ONLINE";
    case Permission.PERMISSION_QUERY_OFFLINE:
      return "PERMISSION_QUERY_OFFLINE";
    case Permission.PERMISSION_MONITORING_CREATE:
      return "PERMISSION_MONITORING_CREATE";
    case Permission.PERMISSION_MONITORING_READ:
      return "PERMISSION_MONITORING_READ";
    case Permission.PERMISSION_TEAM_ADD:
      return "PERMISSION_TEAM_ADD";
    case Permission.PERMISSION_TEAM_DELETE:
      return "PERMISSION_TEAM_DELETE";
    case Permission.PERMISSION_TEAM_LIST:
      return "PERMISSION_TEAM_LIST";
    case Permission.PERMISSION_TEAM_ADMIN:
      return "PERMISSION_TEAM_ADMIN";
    case Permission.PERMISSION_DEPLOY_READ:
      return "PERMISSION_DEPLOY_READ";
    case Permission.PERMISSION_DEPLOY_CREATE:
      return "PERMISSION_DEPLOY_CREATE";
    case Permission.PERMISSION_DEPLOY_PREVIEW:
      return "PERMISSION_DEPLOY_PREVIEW";
    case Permission.PERMISSION_DEPLOY_REDEPLOY:
      return "PERMISSION_DEPLOY_REDEPLOY";
    case Permission.PERMISSION_LOGS_LIST:
      return "PERMISSION_LOGS_LIST";
    case Permission.PERMISSION_CRON_READ:
      return "PERMISSION_CRON_READ";
    case Permission.PERMISSION_CRON_CREATE:
      return "PERMISSION_CRON_CREATE";
    case Permission.PERMISSION_SECRETS_WRITE:
      return "PERMISSION_SECRETS_WRITE";
    case Permission.PERMISSION_SECRETS_DECRYPT:
      return "PERMISSION_SECRETS_DECRYPT";
    case Permission.PERMISSION_SECRETS_LIST:
      return "PERMISSION_SECRETS_LIST";
    case Permission.PERMISSION_TOKENS_WRITE:
      return "PERMISSION_TOKENS_WRITE";
    case Permission.PERMISSION_TOKENS_LIST:
      return "PERMISSION_TOKENS_LIST";
    case Permission.PERMISSION_MIGRATE_READ:
      return "PERMISSION_MIGRATE_READ";
    case Permission.PERMISSION_MIGRATE_PLAN:
      return "PERMISSION_MIGRATE_PLAN";
    case Permission.PERMISSION_MIGRATE_EXECUTE:
      return "PERMISSION_MIGRATE_EXECUTE";
    case Permission.PERMISSION_PROJECT_CREATE:
      return "PERMISSION_PROJECT_CREATE";
    case Permission.PERMISSION_CHALK_ADMIN:
      return "PERMISSION_CHALK_ADMIN";
    case Permission.PERMISSION_BILLING_READ:
      return "PERMISSION_BILLING_READ";
    case Permission.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
