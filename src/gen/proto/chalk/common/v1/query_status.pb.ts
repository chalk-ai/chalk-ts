// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: chalk/common/v1/query_status.proto

/* eslint-disable */

export const protobufPackage = "chalk.common.v1";

export enum QueryStatus {
  /** QUERY_STATUS_UNSPECIFIED - Default value, should not be used */
  QUERY_STATUS_UNSPECIFIED = 0,
  /** QUERY_STATUS_PENDING_SUBMISSION - Pending submission to the database. */
  QUERY_STATUS_PENDING_SUBMISSION = 1,
  /** QUERY_STATUS_SUBMITTED - Submitted to the database, but not yet running */
  QUERY_STATUS_SUBMITTED = 2,
  /** QUERY_STATUS_RUNNING - Running in the database. */
  QUERY_STATUS_RUNNING = 3,
  /** QUERY_STATUS_ERROR - Error with either submitting or running the job. */
  QUERY_STATUS_ERROR = 4,
  /** QUERY_STATUS_EXPIRED - The job did not complete before an expiration deadline, so there are no results. */
  QUERY_STATUS_EXPIRED = 5,
  /** QUERY_STATUS_CANCELLED - Manually cancelled before it errored or finished successfully. */
  QUERY_STATUS_CANCELLED = 6,
  /** QUERY_STATUS_SUCCESSFUL - Successfully ran the job. */
  QUERY_STATUS_SUCCESSFUL = 7,
  /** QUERY_STATUS_SUCCESSFUL_WITH_NONFATAL_ERRORS - Succesfully ran the job, but encountered nonfatal errors (e.g. failed to run resolver on some rows) */
  QUERY_STATUS_SUCCESSFUL_WITH_NONFATAL_ERRORS = 8,
  UNRECOGNIZED = -1,
}

export function queryStatusFromJSON(object: any): QueryStatus {
  switch (object) {
    case 0:
    case "QUERY_STATUS_UNSPECIFIED":
      return QueryStatus.QUERY_STATUS_UNSPECIFIED;
    case 1:
    case "QUERY_STATUS_PENDING_SUBMISSION":
      return QueryStatus.QUERY_STATUS_PENDING_SUBMISSION;
    case 2:
    case "QUERY_STATUS_SUBMITTED":
      return QueryStatus.QUERY_STATUS_SUBMITTED;
    case 3:
    case "QUERY_STATUS_RUNNING":
      return QueryStatus.QUERY_STATUS_RUNNING;
    case 4:
    case "QUERY_STATUS_ERROR":
      return QueryStatus.QUERY_STATUS_ERROR;
    case 5:
    case "QUERY_STATUS_EXPIRED":
      return QueryStatus.QUERY_STATUS_EXPIRED;
    case 6:
    case "QUERY_STATUS_CANCELLED":
      return QueryStatus.QUERY_STATUS_CANCELLED;
    case 7:
    case "QUERY_STATUS_SUCCESSFUL":
      return QueryStatus.QUERY_STATUS_SUCCESSFUL;
    case 8:
    case "QUERY_STATUS_SUCCESSFUL_WITH_NONFATAL_ERRORS":
      return QueryStatus.QUERY_STATUS_SUCCESSFUL_WITH_NONFATAL_ERRORS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return QueryStatus.UNRECOGNIZED;
  }
}

export function queryStatusToJSON(object: QueryStatus): string {
  switch (object) {
    case QueryStatus.QUERY_STATUS_UNSPECIFIED:
      return "QUERY_STATUS_UNSPECIFIED";
    case QueryStatus.QUERY_STATUS_PENDING_SUBMISSION:
      return "QUERY_STATUS_PENDING_SUBMISSION";
    case QueryStatus.QUERY_STATUS_SUBMITTED:
      return "QUERY_STATUS_SUBMITTED";
    case QueryStatus.QUERY_STATUS_RUNNING:
      return "QUERY_STATUS_RUNNING";
    case QueryStatus.QUERY_STATUS_ERROR:
      return "QUERY_STATUS_ERROR";
    case QueryStatus.QUERY_STATUS_EXPIRED:
      return "QUERY_STATUS_EXPIRED";
    case QueryStatus.QUERY_STATUS_CANCELLED:
      return "QUERY_STATUS_CANCELLED";
    case QueryStatus.QUERY_STATUS_SUCCESSFUL:
      return "QUERY_STATUS_SUCCESSFUL";
    case QueryStatus.QUERY_STATUS_SUCCESSFUL_WITH_NONFATAL_ERRORS:
      return "QUERY_STATUS_SUCCESSFUL_WITH_NONFATAL_ERRORS";
    case QueryStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
