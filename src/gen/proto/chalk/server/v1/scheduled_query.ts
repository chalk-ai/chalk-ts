// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: chalk/server/v1/scheduled_query.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { GetScheduledQueryRunRequest, GetScheduledQueryRunResponse } from "./scheduled_query_run";

export const protobufPackage = "chalk.server.v1";

export type ScheduledQueryServiceService = typeof ScheduledQueryServiceService;
export const ScheduledQueryServiceService = {
  getScheduledQueryRun: {
    path: "/chalk.server.v1.ScheduledQueryService/GetScheduledQueryRun",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: GetScheduledQueryRunRequest) =>
      Buffer.from(GetScheduledQueryRunRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => GetScheduledQueryRunRequest.decode(value),
    responseSerialize: (value: GetScheduledQueryRunResponse) =>
      Buffer.from(GetScheduledQueryRunResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => GetScheduledQueryRunResponse.decode(value),
  },
} as const;

export interface ScheduledQueryServiceServer extends UntypedServiceImplementation {
  getScheduledQueryRun: handleUnaryCall<GetScheduledQueryRunRequest, GetScheduledQueryRunResponse>;
}

export interface ScheduledQueryServiceClient extends Client {
  getScheduledQueryRun(
    request: GetScheduledQueryRunRequest,
    callback: (error: ServiceError | null, response: GetScheduledQueryRunResponse) => void,
  ): ClientUnaryCall;
  getScheduledQueryRun(
    request: GetScheduledQueryRunRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: GetScheduledQueryRunResponse) => void,
  ): ClientUnaryCall;
  getScheduledQueryRun(
    request: GetScheduledQueryRunRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: GetScheduledQueryRunResponse) => void,
  ): ClientUnaryCall;
}

export const ScheduledQueryServiceClient = makeGenericClientConstructor(
  ScheduledQueryServiceService,
  "chalk.server.v1.ScheduledQueryService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): ScheduledQueryServiceClient;
  service: typeof ScheduledQueryServiceService;
  serviceName: string;
};
