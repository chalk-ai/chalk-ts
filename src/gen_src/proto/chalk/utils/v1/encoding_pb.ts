// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file chalk/utils/v1/encoding.proto (package chalk.utils.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { EnumOptions, Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message chalk.utils.v1.StringEncoding
 */
export class StringEncoding extends Message<StringEncoding> {
  /**
   * @generated from field: map<int32, string> mapping = 1;
   */
  mapping: { [key: number]: string } = {};

  constructor(data?: PartialMessage<StringEncoding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.utils.v1.StringEncoding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mapping", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StringEncoding {
    return new StringEncoding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StringEncoding {
    return new StringEncoding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StringEncoding {
    return new StringEncoding().fromJsonString(jsonString, options);
  }

  static equals(a: StringEncoding | PlainMessage<StringEncoding> | undefined, b: StringEncoding | PlainMessage<StringEncoding> | undefined): boolean {
    return proto3.util.equals(StringEncoding, a, b);
  }
}

/**
 * @generated from extension: optional chalk.utils.v1.StringEncoding encoding = 80412;
 */
export const encoding = proto3.makeExtension<EnumOptions, StringEncoding>(
  "chalk.utils.v1.encoding", 
  EnumOptions, 
  () => ({ no: 80412, kind: "message", T: StringEncoding, opt: true }),
);

