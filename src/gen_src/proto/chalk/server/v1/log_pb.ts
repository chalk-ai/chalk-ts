// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file chalk/server/v1/log.proto (package chalk.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message chalk.server.v1.LogEntry
 */
export class LogEntry extends Message<LogEntry> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: optional string severity = 2;
   */
  severity?: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<LogEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.LogEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "severity", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "timestamp", kind: "message", T: Timestamp },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogEntry {
    return new LogEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogEntry {
    return new LogEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogEntry {
    return new LogEntry().fromJsonString(jsonString, options);
  }

  static equals(a: LogEntry | PlainMessage<LogEntry> | undefined, b: LogEntry | PlainMessage<LogEntry> | undefined): boolean {
    return proto3.util.equals(LogEntry, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.SearchLogEntriesPageToken
 */
export class SearchLogEntriesPageToken extends Message<SearchLogEntriesPageToken> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<SearchLogEntriesPageToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.SearchLogEntriesPageToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchLogEntriesPageToken {
    return new SearchLogEntriesPageToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchLogEntriesPageToken {
    return new SearchLogEntriesPageToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchLogEntriesPageToken {
    return new SearchLogEntriesPageToken().fromJsonString(jsonString, options);
  }

  static equals(a: SearchLogEntriesPageToken | PlainMessage<SearchLogEntriesPageToken> | undefined, b: SearchLogEntriesPageToken | PlainMessage<SearchLogEntriesPageToken> | undefined): boolean {
    return proto3.util.equals(SearchLogEntriesPageToken, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.SearchLogEntriesRequest
 */
export class SearchLogEntriesRequest extends Message<SearchLogEntriesRequest> {
  /**
   * @generated from field: optional string query = 1;
   */
  query?: string;

  /**
   * @generated from field: optional chalk.server.v1.SearchLogEntriesPageToken page_token = 2;
   */
  pageToken?: SearchLogEntriesPageToken;

  constructor(data?: PartialMessage<SearchLogEntriesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.SearchLogEntriesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "page_token", kind: "message", T: SearchLogEntriesPageToken, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchLogEntriesRequest {
    return new SearchLogEntriesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchLogEntriesRequest {
    return new SearchLogEntriesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchLogEntriesRequest {
    return new SearchLogEntriesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SearchLogEntriesRequest | PlainMessage<SearchLogEntriesRequest> | undefined, b: SearchLogEntriesRequest | PlainMessage<SearchLogEntriesRequest> | undefined): boolean {
    return proto3.util.equals(SearchLogEntriesRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.SearchLogEntriesResponse
 */
export class SearchLogEntriesResponse extends Message<SearchLogEntriesResponse> {
  /**
   * @generated from field: repeated chalk.server.v1.LogEntry log_entries = 1;
   */
  logEntries: LogEntry[] = [];

  /**
   * @generated from field: optional chalk.server.v1.SearchLogEntriesPageToken next_page_token = 2;
   */
  nextPageToken?: SearchLogEntriesPageToken;

  constructor(data?: PartialMessage<SearchLogEntriesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.SearchLogEntriesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "log_entries", kind: "message", T: LogEntry, repeated: true },
    { no: 2, name: "next_page_token", kind: "message", T: SearchLogEntriesPageToken, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchLogEntriesResponse {
    return new SearchLogEntriesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchLogEntriesResponse {
    return new SearchLogEntriesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchLogEntriesResponse {
    return new SearchLogEntriesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SearchLogEntriesResponse | PlainMessage<SearchLogEntriesResponse> | undefined, b: SearchLogEntriesResponse | PlainMessage<SearchLogEntriesResponse> | undefined): boolean {
    return proto3.util.equals(SearchLogEntriesResponse, a, b);
  }
}

