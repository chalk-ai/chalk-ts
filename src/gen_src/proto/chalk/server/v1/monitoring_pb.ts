// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file chalk/server/v1/monitoring.proto (package chalk.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum chalk.server.v1.PagerDutySeverity
 */
export enum PagerDutySeverity {
  /**
   * @generated from enum value: PAGER_DUTY_SEVERITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PAGER_DUTY_SEVERITY_INFO = 1;
   */
  INFO = 1,

  /**
   * @generated from enum value: PAGER_DUTY_SEVERITY_WARNING = 2;
   */
  WARNING = 2,

  /**
   * @generated from enum value: PAGER_DUTY_SEVERITY_ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: PAGER_DUTY_SEVERITY_CRITICAL = 4;
   */
  CRITICAL = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(PagerDutySeverity)
proto3.util.setEnumType(PagerDutySeverity, "chalk.server.v1.PagerDutySeverity", [
  { no: 0, name: "PAGER_DUTY_SEVERITY_UNSPECIFIED" },
  { no: 1, name: "PAGER_DUTY_SEVERITY_INFO" },
  { no: 2, name: "PAGER_DUTY_SEVERITY_WARNING" },
  { no: 3, name: "PAGER_DUTY_SEVERITY_ERROR" },
  { no: 4, name: "PAGER_DUTY_SEVERITY_CRITICAL" },
]);

/**
 * @generated from enum chalk.server.v1.PagerDutyEventAction
 */
export enum PagerDutyEventAction {
  /**
   * @generated from enum value: PAGER_DUTY_EVENT_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PAGER_DUTY_EVENT_ACTION_TRIGGER = 1;
   */
  TRIGGER = 1,

  /**
   * @generated from enum value: PAGER_DUTY_EVENT_ACTION_ACKNOWLEDGE = 2;
   */
  ACKNOWLEDGE = 2,

  /**
   * @generated from enum value: PAGER_DUTY_EVENT_ACTION_RESOLVE = 3;
   */
  RESOLVE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(PagerDutyEventAction)
proto3.util.setEnumType(PagerDutyEventAction, "chalk.server.v1.PagerDutyEventAction", [
  { no: 0, name: "PAGER_DUTY_EVENT_ACTION_UNSPECIFIED" },
  { no: 1, name: "PAGER_DUTY_EVENT_ACTION_TRIGGER" },
  { no: 2, name: "PAGER_DUTY_EVENT_ACTION_ACKNOWLEDGE" },
  { no: 3, name: "PAGER_DUTY_EVENT_ACTION_RESOLVE" },
]);

/**
 * @generated from message chalk.server.v1.PagerDutyEventV2Payload
 */
export class PagerDutyEventV2Payload extends Message<PagerDutyEventV2Payload> {
  /**
   * @generated from field: string summary = 1;
   */
  summary = "";

  /**
   * @generated from field: optional google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: chalk.server.v1.PagerDutySeverity severity = 3;
   */
  severity = PagerDutySeverity.UNSPECIFIED;

  /**
   * @generated from field: string source = 4;
   */
  source = "";

  /**
   * @generated from field: optional string component = 5;
   */
  component?: string;

  /**
   * @generated from field: optional string group = 6;
   */
  group?: string;

  /**
   * @generated from field: optional string class = 7;
   */
  class?: string;

  constructor(data?: PartialMessage<PagerDutyEventV2Payload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.PagerDutyEventV2Payload";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "summary", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "message", T: Timestamp, opt: true },
    { no: 3, name: "severity", kind: "enum", T: proto3.getEnumType(PagerDutySeverity) },
    { no: 4, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "component", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "group", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "class", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PagerDutyEventV2Payload {
    return new PagerDutyEventV2Payload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PagerDutyEventV2Payload {
    return new PagerDutyEventV2Payload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PagerDutyEventV2Payload {
    return new PagerDutyEventV2Payload().fromJsonString(jsonString, options);
  }

  static equals(a: PagerDutyEventV2Payload | PlainMessage<PagerDutyEventV2Payload> | undefined, b: PagerDutyEventV2Payload | PlainMessage<PagerDutyEventV2Payload> | undefined): boolean {
    return proto3.util.equals(PagerDutyEventV2Payload, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.PagerDutyEventV2Link
 */
export class PagerDutyEventV2Link extends Message<PagerDutyEventV2Link> {
  /**
   * @generated from field: string href = 1;
   */
  href = "";

  /**
   * @generated from field: optional string text = 2;
   */
  text?: string;

  constructor(data?: PartialMessage<PagerDutyEventV2Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.PagerDutyEventV2Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "href", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PagerDutyEventV2Link {
    return new PagerDutyEventV2Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PagerDutyEventV2Link {
    return new PagerDutyEventV2Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PagerDutyEventV2Link {
    return new PagerDutyEventV2Link().fromJsonString(jsonString, options);
  }

  static equals(a: PagerDutyEventV2Link | PlainMessage<PagerDutyEventV2Link> | undefined, b: PagerDutyEventV2Link | PlainMessage<PagerDutyEventV2Link> | undefined): boolean {
    return proto3.util.equals(PagerDutyEventV2Link, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.PagerDutyEventV2Image
 */
export class PagerDutyEventV2Image extends Message<PagerDutyEventV2Image> {
  /**
   * @generated from field: string src = 1;
   */
  src = "";

  /**
   * @generated from field: optional string href = 2;
   */
  href?: string;

  /**
   * @generated from field: optional string alt = 3;
   */
  alt?: string;

  constructor(data?: PartialMessage<PagerDutyEventV2Image>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.PagerDutyEventV2Image";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "src", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "href", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "alt", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PagerDutyEventV2Image {
    return new PagerDutyEventV2Image().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PagerDutyEventV2Image {
    return new PagerDutyEventV2Image().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PagerDutyEventV2Image {
    return new PagerDutyEventV2Image().fromJsonString(jsonString, options);
  }

  static equals(a: PagerDutyEventV2Image | PlainMessage<PagerDutyEventV2Image> | undefined, b: PagerDutyEventV2Image | PlainMessage<PagerDutyEventV2Image> | undefined): boolean {
    return proto3.util.equals(PagerDutyEventV2Image, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.PagerDutyEventV2
 */
export class PagerDutyEventV2 extends Message<PagerDutyEventV2> {
  /**
   * @generated from field: chalk.server.v1.PagerDutyEventV2Payload payload = 1;
   */
  payload?: PagerDutyEventV2Payload;

  /**
   * @generated from field: string routing_key = 2;
   */
  routingKey = "";

  /**
   * @generated from field: chalk.server.v1.PagerDutyEventAction event_action = 3;
   */
  eventAction = PagerDutyEventAction.UNSPECIFIED;

  /**
   * @generated from field: optional string dedup_key = 4;
   */
  dedupKey?: string;

  /**
   * @generated from field: optional string client = 5;
   */
  client?: string;

  /**
   * @generated from field: optional string client_url = 6;
   */
  clientUrl?: string;

  /**
   * @generated from field: repeated chalk.server.v1.PagerDutyEventV2Link links = 7;
   */
  links: PagerDutyEventV2Link[] = [];

  /**
   * @generated from field: repeated chalk.server.v1.PagerDutyEventV2Image images = 8;
   */
  images: PagerDutyEventV2Image[] = [];

  constructor(data?: PartialMessage<PagerDutyEventV2>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.PagerDutyEventV2";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "payload", kind: "message", T: PagerDutyEventV2Payload },
    { no: 2, name: "routing_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "event_action", kind: "enum", T: proto3.getEnumType(PagerDutyEventAction) },
    { no: 4, name: "dedup_key", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "client", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "client_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "links", kind: "message", T: PagerDutyEventV2Link, repeated: true },
    { no: 8, name: "images", kind: "message", T: PagerDutyEventV2Image, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PagerDutyEventV2 {
    return new PagerDutyEventV2().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PagerDutyEventV2 {
    return new PagerDutyEventV2().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PagerDutyEventV2 {
    return new PagerDutyEventV2().fromJsonString(jsonString, options);
  }

  static equals(a: PagerDutyEventV2 | PlainMessage<PagerDutyEventV2> | undefined, b: PagerDutyEventV2 | PlainMessage<PagerDutyEventV2> | undefined): boolean {
    return proto3.util.equals(PagerDutyEventV2, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.PagerDutyIntegration
 */
export class PagerDutyIntegration extends Message<PagerDutyIntegration> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: bool default = 3;
   */
  default = false;

  /**
   * @generated from field: string token = 4;
   */
  token = "";

  /**
   * @generated from field: string environment_id = 5;
   */
  environmentId = "";

  constructor(data?: PartialMessage<PagerDutyIntegration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.PagerDutyIntegration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "default", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PagerDutyIntegration {
    return new PagerDutyIntegration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PagerDutyIntegration {
    return new PagerDutyIntegration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PagerDutyIntegration {
    return new PagerDutyIntegration().fromJsonString(jsonString, options);
  }

  static equals(a: PagerDutyIntegration | PlainMessage<PagerDutyIntegration> | undefined, b: PagerDutyIntegration | PlainMessage<PagerDutyIntegration> | undefined): boolean {
    return proto3.util.equals(PagerDutyIntegration, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.TestPagerDutyIntegrationRequest
 */
export class TestPagerDutyIntegrationRequest extends Message<TestPagerDutyIntegrationRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<TestPagerDutyIntegrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.TestPagerDutyIntegrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPagerDutyIntegrationRequest {
    return new TestPagerDutyIntegrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPagerDutyIntegrationRequest {
    return new TestPagerDutyIntegrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPagerDutyIntegrationRequest {
    return new TestPagerDutyIntegrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TestPagerDutyIntegrationRequest | PlainMessage<TestPagerDutyIntegrationRequest> | undefined, b: TestPagerDutyIntegrationRequest | PlainMessage<TestPagerDutyIntegrationRequest> | undefined): boolean {
    return proto3.util.equals(TestPagerDutyIntegrationRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.GetPagerDutyIntegrationRequest
 */
export class GetPagerDutyIntegrationRequest extends Message<GetPagerDutyIntegrationRequest> {
  /**
   * @generated from field: optional string id = 1;
   */
  id?: string;

  constructor(data?: PartialMessage<GetPagerDutyIntegrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.GetPagerDutyIntegrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPagerDutyIntegrationRequest {
    return new GetPagerDutyIntegrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPagerDutyIntegrationRequest {
    return new GetPagerDutyIntegrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPagerDutyIntegrationRequest {
    return new GetPagerDutyIntegrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPagerDutyIntegrationRequest | PlainMessage<GetPagerDutyIntegrationRequest> | undefined, b: GetPagerDutyIntegrationRequest | PlainMessage<GetPagerDutyIntegrationRequest> | undefined): boolean {
    return proto3.util.equals(GetPagerDutyIntegrationRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.GetPagerDutyIntegrationResponse
 */
export class GetPagerDutyIntegrationResponse extends Message<GetPagerDutyIntegrationResponse> {
  /**
   * @generated from field: chalk.server.v1.PagerDutyIntegration integration = 1;
   */
  integration?: PagerDutyIntegration;

  constructor(data?: PartialMessage<GetPagerDutyIntegrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.GetPagerDutyIntegrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "integration", kind: "message", T: PagerDutyIntegration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPagerDutyIntegrationResponse {
    return new GetPagerDutyIntegrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPagerDutyIntegrationResponse {
    return new GetPagerDutyIntegrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPagerDutyIntegrationResponse {
    return new GetPagerDutyIntegrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPagerDutyIntegrationResponse | PlainMessage<GetPagerDutyIntegrationResponse> | undefined, b: GetPagerDutyIntegrationResponse | PlainMessage<GetPagerDutyIntegrationResponse> | undefined): boolean {
    return proto3.util.equals(GetPagerDutyIntegrationResponse, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.TestPagerDutyIntegrationResponse
 */
export class TestPagerDutyIntegrationResponse extends Message<TestPagerDutyIntegrationResponse> {
  /**
   * @generated from field: string status = 1;
   */
  status = "";

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  constructor(data?: PartialMessage<TestPagerDutyIntegrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.TestPagerDutyIntegrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPagerDutyIntegrationResponse {
    return new TestPagerDutyIntegrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPagerDutyIntegrationResponse {
    return new TestPagerDutyIntegrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPagerDutyIntegrationResponse {
    return new TestPagerDutyIntegrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TestPagerDutyIntegrationResponse | PlainMessage<TestPagerDutyIntegrationResponse> | undefined, b: TestPagerDutyIntegrationResponse | PlainMessage<TestPagerDutyIntegrationResponse> | undefined): boolean {
    return proto3.util.equals(TestPagerDutyIntegrationResponse, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.AddPagerDutyIntegrationRequest
 */
export class AddPagerDutyIntegrationRequest extends Message<AddPagerDutyIntegrationRequest> {
  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: string token = 3;
   */
  token = "";

  constructor(data?: PartialMessage<AddPagerDutyIntegrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.AddPagerDutyIntegrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPagerDutyIntegrationRequest {
    return new AddPagerDutyIntegrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPagerDutyIntegrationRequest {
    return new AddPagerDutyIntegrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPagerDutyIntegrationRequest {
    return new AddPagerDutyIntegrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddPagerDutyIntegrationRequest | PlainMessage<AddPagerDutyIntegrationRequest> | undefined, b: AddPagerDutyIntegrationRequest | PlainMessage<AddPagerDutyIntegrationRequest> | undefined): boolean {
    return proto3.util.equals(AddPagerDutyIntegrationRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.AddPagerDutyIntegrationResponse
 */
export class AddPagerDutyIntegrationResponse extends Message<AddPagerDutyIntegrationResponse> {
  /**
   * @generated from field: chalk.server.v1.PagerDutyIntegration integration = 1;
   */
  integration?: PagerDutyIntegration;

  constructor(data?: PartialMessage<AddPagerDutyIntegrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.AddPagerDutyIntegrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "integration", kind: "message", T: PagerDutyIntegration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPagerDutyIntegrationResponse {
    return new AddPagerDutyIntegrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPagerDutyIntegrationResponse {
    return new AddPagerDutyIntegrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPagerDutyIntegrationResponse {
    return new AddPagerDutyIntegrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddPagerDutyIntegrationResponse | PlainMessage<AddPagerDutyIntegrationResponse> | undefined, b: AddPagerDutyIntegrationResponse | PlainMessage<AddPagerDutyIntegrationResponse> | undefined): boolean {
    return proto3.util.equals(AddPagerDutyIntegrationResponse, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.DeletePagerDutyIntegrationRequest
 */
export class DeletePagerDutyIntegrationRequest extends Message<DeletePagerDutyIntegrationRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeletePagerDutyIntegrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.DeletePagerDutyIntegrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePagerDutyIntegrationRequest {
    return new DeletePagerDutyIntegrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePagerDutyIntegrationRequest {
    return new DeletePagerDutyIntegrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePagerDutyIntegrationRequest {
    return new DeletePagerDutyIntegrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePagerDutyIntegrationRequest | PlainMessage<DeletePagerDutyIntegrationRequest> | undefined, b: DeletePagerDutyIntegrationRequest | PlainMessage<DeletePagerDutyIntegrationRequest> | undefined): boolean {
    return proto3.util.equals(DeletePagerDutyIntegrationRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.DeletePagerDutyIntegrationResponse
 */
export class DeletePagerDutyIntegrationResponse extends Message<DeletePagerDutyIntegrationResponse> {
  constructor(data?: PartialMessage<DeletePagerDutyIntegrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.DeletePagerDutyIntegrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePagerDutyIntegrationResponse {
    return new DeletePagerDutyIntegrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePagerDutyIntegrationResponse {
    return new DeletePagerDutyIntegrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePagerDutyIntegrationResponse {
    return new DeletePagerDutyIntegrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePagerDutyIntegrationResponse | PlainMessage<DeletePagerDutyIntegrationResponse> | undefined, b: DeletePagerDutyIntegrationResponse | PlainMessage<DeletePagerDutyIntegrationResponse> | undefined): boolean {
    return proto3.util.equals(DeletePagerDutyIntegrationResponse, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.UpdatePagerDutyIntegrationRequest
 */
export class UpdatePagerDutyIntegrationRequest extends Message<UpdatePagerDutyIntegrationRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional bool default = 3;
   */
  default?: boolean;

  /**
   * @generated from field: optional string token = 4;
   */
  token?: string;

  constructor(data?: PartialMessage<UpdatePagerDutyIntegrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.UpdatePagerDutyIntegrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "default", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePagerDutyIntegrationRequest {
    return new UpdatePagerDutyIntegrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePagerDutyIntegrationRequest {
    return new UpdatePagerDutyIntegrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePagerDutyIntegrationRequest {
    return new UpdatePagerDutyIntegrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePagerDutyIntegrationRequest | PlainMessage<UpdatePagerDutyIntegrationRequest> | undefined, b: UpdatePagerDutyIntegrationRequest | PlainMessage<UpdatePagerDutyIntegrationRequest> | undefined): boolean {
    return proto3.util.equals(UpdatePagerDutyIntegrationRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.UpdatePagerDutyIntegrationResponse
 */
export class UpdatePagerDutyIntegrationResponse extends Message<UpdatePagerDutyIntegrationResponse> {
  /**
   * @generated from field: chalk.server.v1.PagerDutyIntegration integration = 2;
   */
  integration?: PagerDutyIntegration;

  constructor(data?: PartialMessage<UpdatePagerDutyIntegrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.UpdatePagerDutyIntegrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "integration", kind: "message", T: PagerDutyIntegration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePagerDutyIntegrationResponse {
    return new UpdatePagerDutyIntegrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePagerDutyIntegrationResponse {
    return new UpdatePagerDutyIntegrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePagerDutyIntegrationResponse {
    return new UpdatePagerDutyIntegrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePagerDutyIntegrationResponse | PlainMessage<UpdatePagerDutyIntegrationResponse> | undefined, b: UpdatePagerDutyIntegrationResponse | PlainMessage<UpdatePagerDutyIntegrationResponse> | undefined): boolean {
    return proto3.util.equals(UpdatePagerDutyIntegrationResponse, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.SetDefaultPagerDutyIntegrationRequest
 */
export class SetDefaultPagerDutyIntegrationRequest extends Message<SetDefaultPagerDutyIntegrationRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<SetDefaultPagerDutyIntegrationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.SetDefaultPagerDutyIntegrationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultPagerDutyIntegrationRequest {
    return new SetDefaultPagerDutyIntegrationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultPagerDutyIntegrationRequest {
    return new SetDefaultPagerDutyIntegrationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultPagerDutyIntegrationRequest {
    return new SetDefaultPagerDutyIntegrationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultPagerDutyIntegrationRequest | PlainMessage<SetDefaultPagerDutyIntegrationRequest> | undefined, b: SetDefaultPagerDutyIntegrationRequest | PlainMessage<SetDefaultPagerDutyIntegrationRequest> | undefined): boolean {
    return proto3.util.equals(SetDefaultPagerDutyIntegrationRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.SetDefaultPagerDutyIntegrationResponse
 */
export class SetDefaultPagerDutyIntegrationResponse extends Message<SetDefaultPagerDutyIntegrationResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<SetDefaultPagerDutyIntegrationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.SetDefaultPagerDutyIntegrationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetDefaultPagerDutyIntegrationResponse {
    return new SetDefaultPagerDutyIntegrationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetDefaultPagerDutyIntegrationResponse {
    return new SetDefaultPagerDutyIntegrationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetDefaultPagerDutyIntegrationResponse {
    return new SetDefaultPagerDutyIntegrationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetDefaultPagerDutyIntegrationResponse | PlainMessage<SetDefaultPagerDutyIntegrationResponse> | undefined, b: SetDefaultPagerDutyIntegrationResponse | PlainMessage<SetDefaultPagerDutyIntegrationResponse> | undefined): boolean {
    return proto3.util.equals(SetDefaultPagerDutyIntegrationResponse, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.GetAllPagerDutyIntegrationsRequest
 */
export class GetAllPagerDutyIntegrationsRequest extends Message<GetAllPagerDutyIntegrationsRequest> {
  constructor(data?: PartialMessage<GetAllPagerDutyIntegrationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.GetAllPagerDutyIntegrationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllPagerDutyIntegrationsRequest {
    return new GetAllPagerDutyIntegrationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllPagerDutyIntegrationsRequest {
    return new GetAllPagerDutyIntegrationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllPagerDutyIntegrationsRequest {
    return new GetAllPagerDutyIntegrationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAllPagerDutyIntegrationsRequest | PlainMessage<GetAllPagerDutyIntegrationsRequest> | undefined, b: GetAllPagerDutyIntegrationsRequest | PlainMessage<GetAllPagerDutyIntegrationsRequest> | undefined): boolean {
    return proto3.util.equals(GetAllPagerDutyIntegrationsRequest, a, b);
  }
}

/**
 * @generated from message chalk.server.v1.GetAllPagerDutyIntegrationsResponse
 */
export class GetAllPagerDutyIntegrationsResponse extends Message<GetAllPagerDutyIntegrationsResponse> {
  /**
   * @generated from field: repeated chalk.server.v1.PagerDutyIntegration integrations = 1;
   */
  integrations: PagerDutyIntegration[] = [];

  constructor(data?: PartialMessage<GetAllPagerDutyIntegrationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chalk.server.v1.GetAllPagerDutyIntegrationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "integrations", kind: "message", T: PagerDutyIntegration, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllPagerDutyIntegrationsResponse {
    return new GetAllPagerDutyIntegrationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllPagerDutyIntegrationsResponse {
    return new GetAllPagerDutyIntegrationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllPagerDutyIntegrationsResponse {
    return new GetAllPagerDutyIntegrationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAllPagerDutyIntegrationsResponse | PlainMessage<GetAllPagerDutyIntegrationsResponse> | undefined, b: GetAllPagerDutyIntegrationsResponse | PlainMessage<GetAllPagerDutyIntegrationsResponse> | undefined): boolean {
    return proto3.util.equals(GetAllPagerDutyIntegrationsResponse, a, b);
  }
}

